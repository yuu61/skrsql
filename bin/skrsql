#!/usr/bin/env bash
set -eu

# 共通ディレクトリ
SHARE_DIR="/usr/local/share/ssql"
SETUP_DIR="$SHARE_DIR/setup"
BIN_DIR="/usr/local/bin"
DB_NAME="Can"

usage() {
  cat <<-EOF >&2
Usage: $(basename "$0") <type> <args...>

  types:
    list     <章番号> <問番号>     → ${BASE_DIR}/listXX/pre_listXXYY.sql
              第XX章 XX問目／本編掲載用のSQL文
    summary  <章番号>             → ${BASE_DIR}/listXX/pre_summaryXX.sql
              第XX章「できるようになったこと」掲載用のSQL文（list問題をすべて実行した後の状態）
    quiz     <章番号> <問番号>     → ${BASE_DIR}/listXX/quizXXYY.sql
              第XX章 章末練習問題掲載用のSQL文
    quizans  <章番号> <問番号>     → ${BASE_DIR}/chapae/quizansXXYY.sql
              第XX章 練習問題解答掲載用のSQL文
    apxc     <問番号>             → ${BASE_DIR}/chapac/pre_quizapxN.sql
              付録C.1 特訓ドリル（SQLドリル）第N問
    apxd     <問番号>             → ${BASE_DIR}/chapad/pre_listadXX.sql
              付録D データ分析 第XX問

  例:
    $0 list    1  1   → list01/pre_list0101.sql 実行 
    $0 summary 3      → list03/pre_summary03.sql 実行
    $0 quiz    2 10   → list02/quiz0210.sql 実行
    $0 quizans 4  5   → chapae/quizans0405.sql 実行
    $0 apxc    2      → chapac/pre_quizapx2.sql 実行
    $0 apxd    7      → chapad/pre_listad07.sql 実行

※setupのSQL文には先頭に「pre_」が付与されています。
EOF
  exit 1
}

# 引数チェック
[[ $# -ge 2 ]] || usage
TYPE=$1; shift

# 0埋め関数
pad2() { printf "%02d" "$1"; }
case "$TYPE" in
  list)
    [[ $# -eq 2 ]] || usage
    C=$(pad2 "$1"); Q=$(pad2 "$2")
    SQL="$SETUP_DIR/chap${C}/pre_list${C}${Q}.sql"
    ;;
  summary)
    [[ $# -eq 1 ]] || usage
    C=$(pad2 "$1")
    SQL="$SETUP_DIR/chap${C}/pre_summary${C}.sql"
    ;;
  quiz)
    [[ $# -eq 2 ]] || usage
    C=$(pad2 "$1"); Q=$(pad2 "$2")
    SQL="$SETUP_DIR/chap${C}/pre_quiz${C}${Q}.sql"
    ;;
  quizans)
    [[ $# -eq 2 ]] || usage
    C=$(pad2 "$1"); Q=$(pad2 "$2")
    SQL="$SETUP_DIR/chapae/pre_quizans${C}${Q}.sql"
    ;;
  apxc)
    [[ $# -eq 1 ]] || usage
    Q="$1"
    SQL="$SETUP_DIR/chapac/pre_quizapx${Q}.sql"
    ;;
  apxd)
    [[ $# -eq 1 ]] || usage
    Q=$(pad2 "$1")
    SQL="$SETUP_DIR/chapad/pre_listad${Q}.sql"
    ;;
  *)
    usage
    ;;
esac


# ファイル存在チェック
if [[ ! -f "$SQL" ]]; then
  echo "Error: ファイルが見つかりません → $SQL" >&2
  exit 2
fi

# 処理開始メッセージ
echo "問題ファイル: $(basename "$SQL")"

# DB再作成
dropdb --if-exists "$DB_NAME" >/dev/null 2>&1
createdb "$DB_NAME" || error_exit "データベースの作成に失敗しました"

# SQL実行
psql "$DB_NAME" < "$SQL" >/dev/null 2>&1 || error_exit "SQL 実行に失敗しました"

# 終了時にDBを削除
trap 'echo "後処理: データベース "$DB_NAME" を削除中..."; dropdb "$DB_NAME"' EXIT

echo "--- psql を起動します: 終了するには \q を入力 ---"
echo "カーソルキーは利用できません。テキストエディタ等からコマンドを流し込むことを推奨します。"
psql -n "$DB_NAME"